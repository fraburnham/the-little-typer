#lang pie

(claim step-+ (-> Nat Nat))

(define step-+
  (lambda (x)
    (add1 x)))

(claim + (-> Nat Nat Nat))

(define +
  (lambda (x y)
    (iter-Nat x y step-+)))

;; do I need rec-Nat?
;; seems like iter-Nat would do fine
(claim step-* (-> Nat Nat Nat))

(define step-*
  (lambda (multi n-1)
    (+ n-1 multi)))

(claim * (-> Nat Nat Nat))

(define *
  (lambda (x y)
    (iter-Nat x 0 (step-* y))))

